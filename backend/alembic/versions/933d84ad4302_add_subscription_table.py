"""Add subscription table

Revision ID: 933d84ad4302
Revises: fe06c24f397a
Create Date: 2024-10-19 02:59:02.029442

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "933d84ad4302"
down_revision: Union[str, None] = "fe06c24f397a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "ACTIVE",
        "CANCELLED",
        "PAUSED",
        "PAST_DUE",
        "UNPAID",
        name="subscriptionstatustype",
    ).create(op.get_bind())
    op.create_table(
        "subscription",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("price_id", sa.String(), nullable=False),
        sa.Column("customer_id", sa.String(), nullable=False),
        sa.Column("subscription_period_end", sa.DateTime(), nullable=True),
        sa.Column("subscription_ended_date", sa.DateTime(), nullable=True),
        sa.Column("subscription_cancel_at", sa.DateTime(), nullable=True),
        sa.Column("subscription_cancelled_date", sa.DateTime(), nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(
                "ACTIVE",
                "CANCELLED",
                "PAUSED",
                "PAST_DUE",
                "UNPAID",
                name="subscriptionstatustype",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_foreign_key(None, "subscription", "user", ["user_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "subscription", type_="foreignkey")
    op.drop_table("subscription")
    sa.Enum(
        "ACTIVE",
        "CANCELLED",
        "PAUSED",
        "PAST_DUE",
        "UNPAID",
        name="subscriptionstatustype",
    ).drop(op.get_bind())
    # ### end Alembic commands ###
