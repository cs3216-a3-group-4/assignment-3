"""Add essay tables

Revision ID: b47a225ff91c
Revises: ab4ed15e0a83
Create Date: 2024-10-09 18:44:00.931663

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "b47a225ff91c"
down_revision: Union[str, None] = "ab4ed15e0a83"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("INTRODUCTION", "PARAGRAPH", "CONCLUSION", name="paragraphtype").create(
        op.get_bind()
    )
    sa.Enum("GOOD", "NEUTRAL", "BAD", name="inclination").create(op.get_bind())
    sa.Enum("ESSAY", "PARAGRAPH", name="commentparenttype").create(op.get_bind())
    op.create_table(
        "comment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column(
            "parent_type",
            postgresql.ENUM(
                "ESSAY", "PARAGRAPH", name="commentparenttype", create_type=False
            ),
            nullable=False,
        ),
        sa.Column("lack_example", sa.Boolean(), nullable=False),
        sa.Column(
            "inclination",
            postgresql.ENUM(
                "GOOD", "NEUTRAL", "BAD", name="inclination", create_type=False
            ),
            nullable=False,
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "essay",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("question", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "comment_analysis",
        sa.Column("comment_id", sa.Integer(), nullable=False),
        sa.Column("skill_issue", sa.String(), nullable=False),
        sa.Column("analysis_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["analysis_id"],
            ["analysis.id"],
        ),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["comment.id"],
        ),
        sa.PrimaryKeyConstraint("comment_id", "analysis_id"),
    )
    op.create_table(
        "paragraph",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            postgresql.ENUM(
                "INTRODUCTION",
                "PARAGRAPH",
                "CONCLUSION",
                name="paragraphtype",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("essay_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["essay_id"],
            ["essay.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("paragraph")
    op.drop_table("comment_analysis")
    op.drop_table("essay")
    op.drop_table("comment")
    sa.Enum("ESSAY", "PARAGRAPH", name="commentparenttype").drop(op.get_bind())
    sa.Enum("GOOD", "NEUTRAL", "BAD", name="inclination").drop(op.get_bind())
    sa.Enum("INTRODUCTION", "PARAGRAPH", "CONCLUSION", name="paragraphtype").drop(
        op.get_bind()
    )
    # ### end Alembic commands ###
