"""Add event to point, not note



Revision ID: a4f85bdfef33
Revises: d79f0e188c13
Create Date: 2024-09-23 03:48:48.029832

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a4f85bdfef33"
down_revision: Union[str, None] = "d79f0e188c13"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "point_note",
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("note_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.id"],
        ),
        sa.ForeignKeyConstraint(
            ["note_id"],
            ["point.id"],
        ),
        sa.PrimaryKeyConstraint("event_id", "note_id"),
    )
    op.drop_table("event_note")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "event_note",
        sa.Column("event_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("note_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"], ["event.id"], name="event_note_event_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["note_id"], ["note.id"], name="event_note_note_id_fkey"
        ),
        sa.PrimaryKeyConstraint("event_id", "note_id", name="event_note_pkey"),
    )
    op.drop_table("point_note")
    # ### end Alembic commands ###
