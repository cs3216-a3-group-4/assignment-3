"""Add usage and tier tables

Revision ID: 1b8471e6604d
Revises: 3475486ebd66
Create Date: 2024-10-09 17:12:12.556585

"""

from typing import Sequence, Union
from sqlalchemy import orm

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from src.limits.models import Tier

# revision identifiers, used by Alembic.
revision: str = "1b8471e6604d"
down_revision: Union[str, None] = "3475486ebd66"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("FREE", "ADMIN", "PREMIUM", name="tiernames").create(op.get_bind())
    op.create_table(
        "tier",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "tier_name",
            postgresql.ENUM(
                "FREE", "ADMIN", "PREMIUM", name="tiernames", create_type=False
            ),
            nullable=False,
        ),
        sa.Column("label", sa.String(), nullable=False),
        sa.Column("gp_question_limit", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "usage",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("gp_question_asked", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    session = orm.Session(bind=op.get_bind())
    session.add(Tier(tier_name="FREE", label="Free", gp_question_limit=3))
    session.add(Tier(tier_name="ADMIN", label="Admin", gp_question_limit=1000))
    session.add(Tier(tier_name="PREMIUM", label="Premium", gp_question_limit=25))
    session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("usage")
    op.drop_table("tier")
    sa.Enum("FREE", "ADMIN", "PREMIUM", name="tiernames").drop(op.get_bind())
    # ### end Alembic commands ###
