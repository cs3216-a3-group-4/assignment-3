// This file is auto-generated by @hey-api/openapi-ts

export const AnalysisDTOSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    category: {
      $ref: "#/components/schemas/CategoryDTO",
    },
    content: {
      type: "string",
      title: "Content",
    },
  },
  type: "object",
  required: ["id", "category", "content"],
  title: "AnalysisDTO",
} as const;

export const AnswerDTOSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    points: {
      items: {
        $ref: "#/components/schemas/PointMiniDTO",
      },
      type: "array",
      title: "Points",
    },
  },
  type: "object",
  required: ["id", "points"],
  title: "AnswerDTO",
} as const;

export const Body_log_in_auth_login_postSchema = {
  properties: {
    grant_type: {
      anyOf: [
        {
          type: "string",
          pattern: "password",
        },
        {
          type: "null",
        },
      ],
      title: "Grant Type",
    },
    username: {
      type: "string",
      title: "Username",
    },
    password: {
      type: "string",
      title: "Password",
    },
    scope: {
      type: "string",
      title: "Scope",
      default: "",
    },
    client_id: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Client Id",
    },
    client_secret: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Client Secret",
    },
  },
  type: "object",
  required: ["username", "password"],
  title: "Body_log_in_auth_login_post",
} as const;

export const CategoryDTOSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    name: {
      type: "string",
      title: "Name",
    },
  },
  type: "object",
  required: ["id", "name"],
  title: "CategoryDTO",
} as const;

export const CreateUserQuestionSchema = {
  properties: {
    question: {
      type: "string",
      title: "Question",
    },
  },
  type: "object",
  required: ["question"],
  title: "CreateUserQuestion",
} as const;

export const EventDTOSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    title: {
      type: "string",
      title: "Title",
    },
    description: {
      type: "string",
      title: "Description",
    },
    is_singapore: {
      type: "boolean",
      title: "Is Singapore",
    },
    date: {
      type: "string",
      format: "date-time",
      title: "Date",
    },
    categories: {
      items: {
        $ref: "#/components/schemas/CategoryDTO",
      },
      type: "array",
      title: "Categories",
    },
    analysises: {
      items: {
        $ref: "#/components/schemas/AnalysisDTO",
      },
      type: "array",
      title: "Analysises",
    },
    gp_questions: {
      items: {
        $ref: "#/components/schemas/GPQuestionDTO",
      },
      type: "array",
      title: "Gp Questions",
    },
  },
  type: "object",
  required: [
    "id",
    "title",
    "description",
    "is_singapore",
    "date",
    "categories",
    "analysises",
    "gp_questions",
  ],
  title: "EventDTO",
} as const;

export const EventIndexResponseSchema = {
  properties: {
    total_count: {
      type: "integer",
      title: "Total Count",
    },
    count: {
      type: "integer",
      title: "Count",
    },
    data: {
      items: {
        $ref: "#/components/schemas/MiniEventDTO",
      },
      type: "array",
      title: "Data",
    },
  },
  type: "object",
  required: ["total_count", "count", "data"],
  title: "EventIndexResponse",
} as const;

export const GPQuestionDTOSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    question: {
      type: "string",
      title: "Question",
    },
    is_llm_generated: {
      type: "boolean",
      title: "Is Llm Generated",
    },
    categories: {
      items: {
        $ref: "#/components/schemas/CategoryDTO",
      },
      type: "array",
      title: "Categories",
    },
  },
  type: "object",
  required: ["id", "question", "is_llm_generated", "categories"],
  title: "GPQuestionDTO",
} as const;

export const HTTPValidationErrorSchema = {
  properties: {
    detail: {
      items: {
        $ref: "#/components/schemas/ValidationError",
      },
      type: "array",
      title: "Detail",
    },
  },
  type: "object",
  title: "HTTPValidationError",
} as const;

export const MiniEventDTOSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    title: {
      type: "string",
      title: "Title",
    },
    description: {
      type: "string",
      title: "Description",
    },
    is_singapore: {
      type: "boolean",
      title: "Is Singapore",
    },
    date: {
      type: "string",
      format: "date-time",
      title: "Date",
    },
    categories: {
      items: {
        $ref: "#/components/schemas/CategoryDTO",
      },
      type: "array",
      title: "Categories",
    },
  },
  type: "object",
  required: [
    "id",
    "title",
    "description",
    "is_singapore",
    "date",
    "categories",
  ],
  title: "MiniEventDTO",
} as const;

export const PointMiniDTOSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    title: {
      type: "string",
      title: "Title",
    },
    body: {
      type: "string",
      title: "Body",
    },
    events: {
      items: {
        $ref: "#/components/schemas/EventDTO",
      },
      type: "array",
      title: "Events",
    },
  },
  type: "object",
  required: ["id", "title", "body", "events"],
  title: "PointMiniDTO",
} as const;

export const ProfileUpdateSchema = {
  properties: {
    category_ids: {
      items: {
        type: "integer",
      },
      type: "array",
      title: "Category Ids",
    },
  },
  type: "object",
  required: ["category_ids"],
  title: "ProfileUpdate",
} as const;

export const SignUpDataSchema = {
  properties: {
    email: {
      type: "string",
      format: "email",
      title: "Email",
    },
    password: {
      type: "string",
      minLength: 6,
      title: "Password",
    },
  },
  type: "object",
  required: ["email", "password"],
  title: "SignUpData",
} as const;

export const TokenSchema = {
  properties: {
    access_token: {
      type: "string",
      title: "Access Token",
    },
    token_type: {
      type: "string",
      title: "Token Type",
    },
    user: {
      $ref: "#/components/schemas/UserPublic",
    },
  },
  type: "object",
  required: ["access_token", "token_type", "user"],
  title: "Token",
} as const;

export const UserPublicSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    email: {
      type: "string",
      format: "email",
      title: "Email",
    },
    categories: {
      items: {
        $ref: "#/components/schemas/CategoryDTO",
      },
      type: "array",
      title: "Categories",
    },
  },
  type: "object",
  required: ["id", "email", "categories"],
  title: "UserPublic",
} as const;

export const UserQuestionMiniDTOSchema = {
  properties: {
    id: {
      type: "integer",
      title: "Id",
    },
    question: {
      type: "string",
      title: "Question",
    },
    answer: {
      $ref: "#/components/schemas/AnswerDTO",
    },
  },
  type: "object",
  required: ["id", "question", "answer"],
  title: "UserQuestionMiniDTO",
} as const;

export const ValidationErrorSchema = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: "string",
          },
          {
            type: "integer",
          },
        ],
      },
      type: "array",
      title: "Location",
    },
    msg: {
      type: "string",
      title: "Message",
    },
    type: {
      type: "string",
      title: "Error Type",
    },
  },
  type: "object",
  required: ["loc", "msg", "type"],
  title: "ValidationError",
} as const;
